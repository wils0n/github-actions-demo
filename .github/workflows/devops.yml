docker-ecr:
  needs: test
  runs-on: ubuntu-latest
  if: github.event_name == 'push' && github.ref == 'refs/heads/main'
  permissions:
    id-token: write
    contents: read
  steps:
    - name: Checkout
      uses: actions/checkout@v4

    # OIDC (usa vars.AWS_ROLE_ARN)
    - name: Configure AWS credentials (OIDC)
      if: env.AWS_REGION != '' && vars.AWS_ROLE_ARN != ''
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        role-session-name: gha-${{ github.run_id }}
        aws-region: ${{ env.AWS_REGION }}

    # Fallback con Access Keys (solo si NO hay ARN)
    - name: Configure AWS credentials (Access Keys)
      if: env.AWS_REGION != '' && vars.AWS_ROLE_ARN == ''
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Ensure ECR repository exists
      run: |
        aws ecr describe-repositories --repository-names "$ECR_REPO_NAME" >/dev/null 2>&1 || \
        aws ecr create-repository --repository-name "$ECR_REPO_NAME" \
          --image-scanning-configuration scanOnPush=true \
          --encryption-configuration encryptionType=AES256

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Extract Docker metadata (tags/labels)
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=${{ needs.test.outputs.build_tag }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build & Push image to ECR
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:buildcache
        cache-to: type=registry,ref=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}:buildcache,mode=max

    - name: Summary
      run: |
        echo "## 🐳 Publicación exitosa en AWS ECR" >> $GITHUB_STEP_SUMMARY
        echo "**Registro:** ${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_STEP_SUMMARY
        echo "**Repositorio:** $ECR_REPO_NAME" >> $GITHUB_STEP_SUMMARY
        echo "**Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
